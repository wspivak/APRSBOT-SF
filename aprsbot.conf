
[tnc_rf]
addr = <fill-in>
port = 8001


[tnc_aprsis]
addr     = noam.aprs2.net
port     = 14580
callsign = <fill-in + SSID>
passcode = <fill-in>

# All positions, messages, status, objects within 5000 km of your QTH 
filter = t/pmso r/<fill-in Lat to 1 decimal place>/-<Fill-in Lon to 1 decimal place>/5000

[aprs]
callsign=<fill-in + SSID>
netname = <fill-in> ;Only a single netname is allowed.
# aliases allow you to have a valid call sign and a net call sign.
aliases = <fill-in>, <fill-in + SSID> 

dbfile = /opt/aprsbot/erli.db

#Beacon commands:
beacon_alias = <same as netname>
beacon_message = My Tactical Alias is {alias} and my call is {call}

[qrz]
username = Your_Username
password = Your_Password

[store_forward]
enabled = true
store_db = /opt/aprsbot/store_forward.db
log_file = /opt/aprsbot/logs/sf.log
max_retries = 4

# Wait 60 mins before even trying to resend again
resend_delay = 60

# delay_send: wait 20 seconds between messages to single callsign
delay_send = 5 

# resent_clock in hrs
resend_clock = 6


users_refresh_secs = 3600
filter_heartbeat_secs = 7200
filter_min_gap_secs = 120

[commands]
#These are known commands
help = help
h    = help
ping = ping
version = version
time = time
cq = cq
netmsg = netmsg
netmrg = netmsg
msg = netmsg
mrg = netmsg
netcheckout = netcheckout
netusers = netusers
sf-on = sf-on
sf-off = sf-off
blacklist_add = blacklist_add
blacklist_del = blacklist_del
#admin_add = admin_add
#admin_del = admin_del
?aprst = ?aprst
?ping? = ?ping?


# Example: an alias for a command
# h = help

[responses]
netcheckout_success = Bye-Bye, au revoir, auf Wiedersehen, adi√≥s...
store_off = Store and Forward Turned Off
store_on = Store and Forward Turned On
welcome_message = Welcome, Accueillir, Willkommen, Bienvenido to the {netname}!

[status]
send_freq = 1800

; A IP address that, by answering to a ping, will allow us to know if the
; system can connect to the local network (usually a local router).
; Comment this key out to disable this check.
;eth_host=192.168.0.1

; A IP address that, by answering to a ping, will allow us to know if the
; system's route to the Internet is Ok. Comment this key out to disable
; this check.
inet_host=8.8.8.8

; A hostname that, by answering to a ping, will allow us to know if the
; system's DNS resolver is working. Comment this key out to disable this
; check.
dns_host=google.com

; A IP address or hostname that, by answering to a ping, will allows us
; to know if the system's VPN is working. Comment this key out to disable
; this check or if the host does not have a VPN.
;vpn_host=10.10.10.10


[scheduler]
#for schedule_text.py 

# mode = fixed | coverage
mode = fixed

# --- Fixed mode settings ---
num_messages = 12
start_hour   = 0
end_hour     = 23

# --- Coverage mode settings ---
coverage_days = 5
coverage_pct  = 0.9
max_per_day = 15


[bulletins]
; Configure APRS general bulletins (BLN0..9), announcements (BLNA..Z) and
; group bulletins (BLNxyyyyy).

; Frequency of update for simple bulletins (see bellow) in seconds.
; 4 hours = 4 * 60min * 60sec
send_freq=14400

;
; Three types of bulletins can be defined here:
;
;   - General bulletins: BLN0..9 ("BLN" followed by a single numeric digit).
;
;   - Announcements: BLNA..Z ("BLN" followed by a single uppercase letter).
;
;   - Group Bulletins: BLNxyyyyy ("BLN" followed by a single numeric digit
;     in-group identifier, followed by up to 5 characters with the group
;     name). Example: BLN0ASTRO, BLN0WX, BLN1WX, etc.
;
; Implementations should display bulletins sorted by callsign and then by
; bulletin id/name, so it is ok to send multi-line messages that continue on
; the following bulletin. We always send bulletins in this order however, due
; to reasons like digipeating paths and channel usage, there is no assurance
; they will arrive to all receiving stations in the same order they were sent
; (or even if they will arrive at all).
;
; APRS specification says the text of a single bulletins must not be longer
; than 67 characters. Some implementations are more tolerant to longer
; messages and, so, no validation is done here. You SHOULD NOT assume _all_
; implementations can display long messages.
;
; For more information see the APRS Specification v1.0.1 chapter 14, page 73.
;
;
;
; There are two ways of defining bulletins here: simple and rule-based.
;
; A simple bulletin is defined by a configuration key BLNx=text (e.g.
;
;   BLN0=This is bulletin zero.
;
; If such key exists, BLN0 will be sent with this text every send_freq
; seconds. If not, we look for a more flexible rule-based bulletin using
; the cron syntax (see "man 5 crontab" for documentation).
;
; Rules follow the format BLN*_rule_* and are evaluated every minute; if a
; rule matches the current local time, the bulletin will be sent with the
; text given by the rule "command" field. If there is more than one rule for
; a given bulletin, they will be evaluated in strict alphabetical order (so
; BLN0_rule_02 comes before BLN0_rule_1) and the *last* matching rule will
; win.
;
; The rules allow standard cron syntax with fields:
;
;   minutes, hours, day (1-31), month (1-12 or JAN-DEC), day of week (0-6 or SUN-SAT)
;
; with the operators for any (*), items (,), ranges (-) and step (/). It also
; supports following (somewhat common) extensions:
;
;  - "L" for the last occurrence of some day. In the day of the week field,
;    it matches the last given day of a month, so "*/10 0 * * 5L" will trigger
;    every 10 minutes on the last Friday of the month; on the day of month
;    field, "0 0 L * *" will trigger at the midnight of the last day of the
;    month (28, 29, 30 or 31).
;  - "#" for the n occurrence of a day of the week. For example. "0 0 * * 1#2"
;    will trigger on midnight at the second Monday of the week;
;  - "W" for the nearest weekday of a given day of the month, so "0 0 7W * *"
;     will trigger on 6th (Friday) if day 7th falls in a Saturday or 8th if
;     day 7th on a Saunday.
;
; Time-based shortcuts (@hourly, @weekly, etc.) are supported but not event
; based (e.g. @reboot) as they make no sense here.
;
; Notice that there is a tricky (but useful) behavior in the crontab handling
; of rules with both day-of-the-month and day-of-the-week are defined: in
; these cases, the rule will succeed if any of these fields match (eg. the
; rule "*/10 * 1 * 0" will trigger on the first day of the month and on every
; Sunday).
;
; The rules are evaluated once a minute, but the exact moment within the
; minute (and therefore the interval between two evaluations) is randomized
; by 30s to prevent packet storms with several stations trying to transmit at
; some "magic" moments (e.g. exactly at the quarter of hour). Also notice that
; messages are posted to the TNC at the time the evaluation succeeds, but it
; may take several seconds for them to be transmitted due to amount of traffic
; in the channel.
;
; These rules give A LOT of flexibility, but they require attention or may end
; up spamming the network with bulletins. The following set of rules, for
; example, allow a complex schedule for BLN0:
;
;
BLN0_rule_010=*/30     *   1      9   *  Happy Labor Day!     
BLN0_rule_020=*/30     *   1      1   *  Happy New Year!     
BLN0_rule_021=*/30     *   31    12   *  Happy New Year!      
BLN0_rule_031=*/30     *   13    10   *  Happy Columbus Day!     
BLN0_rule_032=*/30     *   4     11   *  It's Election Day!     
BLN0_rule_033=*/30     *   11    11   *  Thank you Veterans for your service!     
BLN0_rule_040=*/30     *   4      7   *  Happy Independence Day!     
BLN0_rule_050=*/30     *   27    11   *  Happy Thanksgiving!     
BLN0_rule_060=*/30     *   18     4   *  Today is World Amateur Radio Day!     
BLN0_rule_070=*/30     *   24-25 12   *  Merry Christmas!     
BLN0_rule_080=*/30     *   11     9   *  We remember those lost today, both tenants and responders


;
; The effects will be:
;
; - For any day that do not have a more specific rule, BLN0 will be sent
;   every 10 minutes with the text "Hello there!" (00h10, 00h20, etc.);
; - On January 1st, it will say "Happy New year!";
; - On January 3rd, it will say "Happy birthday J. R. R. Tolkien (1892-1973)"
;   every ten minutes, except between 18h00..20h59 when it says "J. R. R.
;   Tolkien (1892-1973) - Let's toast at 9pm!" and exactly at 21h00, when it
;   sends a single "J. R. R. Tolkien (1892-1973) - The Professor! *toast*";
; - The following days will also have its own special messages:
;
;      14/March: Happy Pi Day!
;      25/March: Today is Tolkien Reading Day!
;      18/April: Today is World Amateur Radio Day!  *cheers*
;      25/May:   Happy Towel Day!
;



; For simple bulletins, syntax is:
;
;BLN1=Bulletin 1 text here
;BLNA=Announcement A text here ...
;BLN1ASTRO=Astronomical reports here ...

BLN1 = 
BLN2 =     
BLN3 = 
BLN4 =     
BLN5 =     
BLN6 =     
BLN7 =     
BLN8 =     
BLN9 =     
BLN0 =     
BLN1NET =     
BLN2NET =     
BLN3NET =     
BLN4NET =     
BLN5NET =     
BLN6NET =     
BLN7NET =     
BLN8NET =     
BLN9NET =     
BLN0NET =     


